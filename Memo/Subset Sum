class Solution{   
public:
    bool f(int ind, int sum, vector<int>& arr, vector<vector<int>>& dp){
        if(sum == 0) return true;
        if(ind == 0) return arr[ind] == sum;
        if(dp[ind][sum] != -1) return dp[ind][sum];
        bool notTake = f(ind-1, sum, arr, dp);
        bool take = false;
        if(arr[ind] <= sum) take = f(ind-1, sum-arr[ind], arr, dp);
        return dp[ind][sum] = take | notTake;
    }
    bool isSubsetSum(vector<int>arr, int sum){
        // code here
        int n = arr.size();
        vector<vector<int>> dp(n, vector<int>(sum + 1, -1));
        return f(n-1, sum, arr, dp);
    }
};
